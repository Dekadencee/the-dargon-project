<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
   <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="DargonUIColors.light.xaml"/>
   </ResourceDictionary.MergedDictionaries>
   <Style TargetType="Menu">
      <Setter Property="Background" Value="Transparent"/>
   </Style>
   <Style TargetType="MenuItem">
      <Setter Property="Foreground" Value="#EFEFEF"></Setter>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type MenuItem}">
               <Border x:Name="Border" 
                       Background="Transparent"  
                       BorderBrush="Transparent"  
                       BorderThickness="1"  
                       CornerRadius="0">
                  <Grid>
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                        <ColumnDefinition x:Name="Col3" Width="14"/>
                     </Grid.ColumnDefinitions>
                     <!-- ContentPresenter to show an Icon if needed -->
                     <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                     <!-- Glyph is a checkmark if needed for a checkable menu -->
                     <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                        <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                     </Grid>
                     <!-- Content for the menu text etc -->
                     <ContentPresenter Grid.Column="1"  
                                Margin="{TemplateBinding Padding}"  
                                x:Name="HeaderHost"  
                                RecognizesAccessKey="True"  
                                ContentSource="Header" VerticalAlignment="Center"/>
                     <!-- Content for the menu IGT -->
                     <ContentPresenter Grid.Column="2"  
                                        Margin="8,1,8,1"  
                                        x:Name="IGTHost"  
                                        ContentSource="InputGestureText"  
                                        VerticalAlignment="Center"/>
                     <!-- Arrow drawn path which points to the next level of the menu -->
                     <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                        <!--<Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>-->
                        <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Stretch" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" RenderTransformOrigin="0.5,0.5" Margin="0,-0.063,2,0.062">
                           <Path.RenderTransform>
                              <TransformGroup>
                                 <ScaleTransform/>
                                 <SkewTransform/>
                                 <RotateTransform Angle="88.864"/>
                                 <TranslateTransform/>
                              </TransformGroup>
                           </Path.RenderTransform>
                        </Path>
                     </Grid>
                     <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                     <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                        <Border x:Name="SubMenuBorder" Background="{Binding Path=Background,ElementName=Border}" BorderBrush="{Binding Path=BorderBrush,ElementName=Border}" BorderThickness="0" Padding="1,1,1,1">
                           <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True"  >
                              <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                              <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Style="{x:Null}" Grid.IsSharedSizeScope="True" >
                              </StackPanel>
                           </Grid>
                        </Border>
                     </Popup>
                  </Grid>
               </Border>

               <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
               <ControlTemplate.Triggers>
                  <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                  <Trigger Property="Role" Value="TopLevelHeader">
                     <Setter Property="Padding" Value="6,1,6,1"/>
                     <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                     <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                     <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                     <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                     <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                     <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                     <Setter Property="Visibility" Value="Visible" TargetName="ArrowPanel"/>
                     <Setter Property="Background" TargetName="Border" Value="Transparent"/>
                     <Setter Property="BorderBrush" TargetName="Border" Value="Transparent"/>
                     <Setter Property="BorderThickness" TargetName="Border" Value="0"/>
                  </Trigger>
                  <MultiTrigger>
                     <MultiTrigger.Conditions>
                        <Condition Property="Role" Value="TopLevelHeader"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                     </MultiTrigger.Conditions>
                     <MultiTrigger.Setters>
                        <Setter Property="Background" TargetName="Border" Value="{StaticResource PopupSourceBackgroundBrush}"></Setter>
                     </MultiTrigger.Setters>
                  </MultiTrigger>
                  <MultiTrigger>
                     <MultiTrigger.Conditions>
                        <Condition Property="Role" Value="TopLevelHeader"/>
                        <Condition Property="IsSubmenuOpen" Value="True"/>
                     </MultiTrigger.Conditions>
                     <MultiTrigger.Setters>
                        <Setter Property="Background" TargetName="Border" Value="{StaticResource PopupBackgroundBrush}"></Setter>
                     </MultiTrigger.Setters>
                  </MultiTrigger>

                  <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                  <Trigger Property="Role" Value="TopLevelItem">
                     <Setter Property="Padding" Value="6,1,6,1"/>
                     <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                     <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                     <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                     <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                     <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                     <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                  </Trigger>
                  <!-- Role = SubMenuHeader : Child menu item that has children -->
                  <Trigger Property="Role" Value="SubmenuHeader">
                     <Setter Property="DockPanel.Dock" Value="Top"/>
                     <Setter Property="Padding" Value="0,2,0,2"/>
                     <Setter Property="Placement" Value="Right" TargetName="SubMenuPopup"/>
                     <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                     <Setter Property="BorderBrush" TargetName="Border" Value="Transparent"/>
                     <Setter Property="Background" TargetName="Border" Value="{StaticResource PopupBackgroundBrush}"/>
                  </Trigger>
                  <MultiTrigger>
                     <MultiTrigger.Conditions>
                        <Condition Property="Role" Value="SubmenuHeader"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                     </MultiTrigger.Conditions>
                     <MultiTrigger.Setters>
                        <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Lighten160}"></Setter>
                     </MultiTrigger.Setters>
                  </MultiTrigger>
                  <MultiTrigger>
                     <MultiTrigger.Conditions>
                        <Condition Property="Role" Value="SubmenuHeader"/>
                        <Condition Property="IsSubmenuOpen" Value="True"/>
                     </MultiTrigger.Conditions>
                     <MultiTrigger.Setters>
                        <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Lighten160}"></Setter>
                     </MultiTrigger.Setters>
                  </MultiTrigger>
                  <!-- Role = SubMenuItem : Child menu item that is childless-->
                  <Trigger Property="Role" Value="SubmenuItem">
                     <Setter Property="DockPanel.Dock" Value="Top"/>
                     <Setter Property="Padding" Value="0,2,0,2"/>
                     <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                     <Setter Property="BorderThickness" Value="1"/>
                     <Setter Property="BorderBrush" Value="Transparent"/>
                     <Setter Property="Background" TargetName="Border" Value="{StaticResource PopupBackgroundBrush}"/>
                  </Trigger>
                  <MultiTrigger>
                     <MultiTrigger.Conditions>
                        <Condition Property="Role" Value="SubmenuItem"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                     </MultiTrigger.Conditions>
                     <MultiTrigger.Setters>
                        <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Lighten160}"></Setter>
                     </MultiTrigger.Setters>
                  </MultiTrigger>
                  <MultiTrigger>
                     <MultiTrigger.Conditions>
                        <Condition Property="Role" Value="SubmenuItem"/>
                        <Condition Property="IsSubmenuOpen" Value="True"/>
                     </MultiTrigger.Conditions>
                     <MultiTrigger.Setters>
                        <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Lighten160}"></Setter>
                     </MultiTrigger.Setters>
                  </MultiTrigger>
                  <!--
                  <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                     <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                  </Trigger>
                  <Trigger Property="IsSuspendingPopupAnimation" Value="False">
                     <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                  </Trigger>
                  -->
                  <!-- If no Icon is present the we collapse the Icon Content -->
                  <Trigger Property="Icon" Value="{x:Null}">
                     <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                  </Trigger>
                  <!-- The GlyphPanel contains the CheckMark -->
                  <Trigger Property="IsChecked" Value="true">
                     <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                     <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                  </Trigger>
                  <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                  <!--
                  <Trigger Property="IsHighlighted" Value="true">
                     <Setter Property="BorderBrush" Value="{StaticResource Lighten40}" />
                     <Setter Property="Foreground" Value="White"  />
                     <Setter Property="Background" Value="{StaticResource PopupSourceBackgroundBrush}"></Setter>
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="true">
                     <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                     <Setter Property="BorderBrush" Value="{StaticResource Lighten40}" />
                     <Setter Property="Foreground" Value="White"  />
                     <Setter Property="Background" Value="Red"></Setter>
                  </Trigger>
                  -->
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
</ResourceDictionary>