<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
   <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="/libdargon.ui-wpf;component/DargonUIColors.light.xaml"/>
   </ResourceDictionary.MergedDictionaries>
   
   <Color x:Key="RowBackground" A="255" R="58" G="58" B="65"/>
   <SolidColorBrush x:Key="RowBackgroundBrush" Color="{StaticResource RowBackground}"/>
   <Color x:Key="RowBackgroundAlternate" A="255" R="65" G="65" B="75"/>
   <SolidColorBrush x:Key="RowBackgroundAlternateBrush" Color="{StaticResource RowBackgroundAlternate}"/>
   
   <Style TargetType="{x:Type DataGrid}" x:Key="ModListingDataGridStyle" BasedOn="{StaticResource {x:Type DataGrid}}">
      <Setter Property="RowBackground" Value="{StaticResource RowBackgroundBrush}"/>
      <Setter Property="AlternatingRowBackground" Value="{StaticResource RowBackgroundAlternateBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource WindowChromeBorderGradientBrush}"/>
      <Setter Property="BorderThickness" Value="1px,0,1px,1px"/>
      <Setter Property="Background" Value="{StaticResource ContentControlBackgroundBrush}"/>
   </Style>
   <Style TargetType="DataGridColumnHeader">
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <!-- Template the contents -->
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="DataGridColumnHeader">
               <ControlTemplate.Resources>
                  <Style TargetType="Grid" x:Key="ColumnHeaderGridStyle">
                     <Setter Property="Background" Value="{StaticResource WindowChromeBrush}"/>
                  </Style>
               </ControlTemplate.Resources>
               <Border BorderThickness="0,0,1,0" BorderBrush="{StaticResource WindowChromeTableBorderTiledBrush}">
                  <Grid Name="_grid" Style="{StaticResource ColumnHeaderGridStyle}">
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                     </Grid.ColumnDefinitions>
                     <Grid Grid.Column="1" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                           <ColumnDefinition Width="Auto"/>
                           <ColumnDefinition/>
                           <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="0" Name="SortArrow" FontFamily="WebDings" FontSize="8" VerticalAlignment="Center" Margin="8px,0px,0px,0px">
                           <TextBlock.Resources>
                              <Style TargetType="{x:Type TextBlock}">
                                 <Setter Property="Foreground" Value="White"/>
                              </Style>
                           </TextBlock.Resources>
                        </TextBlock>
                        <ContentPresenter Grid.Column="1" Margin="4px,1px,0px,1px" Name="contentPresenter">
                           <ContentPresenter.Resources>
                              <Style TargetType="{x:Type TextBlock}">
                                 <Setter Property="Foreground" Value="White"/>
                              </Style>
                           </ContentPresenter.Resources>
                        </ContentPresenter>
                        <TextBlock Grid.Column="2" Text="6" Name="DummySortArrow" Margin="4px,0,0,0" FontFamily="Webdings" FontSize="8" Foreground="Transparent"/>
                        <!-- Makes the contentpresenter centered/evened out -->
                     </Grid>
                     <Thumb x:Name="PART_LeftHeaderGripper" Grid.Column="0"
                           HorizontalAlignment="Left"
                           Width="5" Cursor="SizeWE" Opacity="0" />
                     <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="2"
                           HorizontalAlignment="Right"
                           Width="5" Cursor="SizeWE" Opacity="0" />
                  </Grid>
               </Border>
               <ControlTemplate.Triggers>
                  <!-- 
                  Note: The header of a GridView uses a dummy DataGridColumnHeader spanning the 
                  entire width of the column group control to act as a background fill.  As a 
                  result, always adding text to a column header is a bad idea.  
                  -->
                  <Trigger Property="Content" Value="{x:Null}">
                     <Setter Property="Text" TargetName="SortArrow" Value="{x:Null}"/>
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="Background" TargetName="_grid" Value="Red"/>
                  </Trigger>
                  <Trigger Property="IsPressed" Value="True">
                     <Setter Property="Background" TargetName="_grid" Value="Green"/>
                  </Trigger>
                  <Trigger Property="SortDirection" Value="Ascending">
                     <Setter Property="FontFamily" Value="WebDings" TargetName="SortArrow"/>
                     <Setter Property="Text" TargetName="SortArrow" Value="5"/>
                     <Setter Property="Background" TargetName="_grid" Value="{StaticResource WindowChromeBrush}"/>
                  </Trigger>
                  <Trigger Property="SortDirection" Value="Descending">
                     <Setter Property="FontFamily" Value="WebDings" TargetName="SortArrow"/>
                     <Setter Property="Text" TargetName="SortArrow" Value="6"/>
                     <Setter Property="Background" TargetName="_grid" Value="{StaticResource WindowChromeBrush}"/>
                  </Trigger>
                  <!--
                  <Trigger Property="SortDirection" Value="{x:Null}">
                     <Setter Property="Foreground" TargetName="SortArrow" Value="Transparent"/>
                  </Trigger>
                  -->
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
      <Style.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{StaticResource GenericBackgroundHighlightBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource GenericBorderHighlightBrush}"/>
         </Trigger>
      </Style.Triggers>
   </Style>
   <Style TargetType="DataGridRow">
      <Setter Property="BorderBrush" Value="Red"/>
   </Style>
   <Style TargetType="DataGridCell">
      <Setter Property="Foreground" Value="White" />
      <Setter Property="BorderBrush" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Style.Triggers>
         <!-- Highlights entire row when a cell is selected -->
         <Trigger Property="IsSelected" Value="True">
            <Setter Property="BorderBrush" Value="{StaticResource Lighten80}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{StaticResource Lighten80}" />
         </Trigger>

         <!-- Highlights selected cell -->
         <Trigger Property="IsFocused" Value="True">
            <Setter Property="BorderBrush" Value="{StaticResource Lighten220}"/>
            <Setter Property="BorderThickness" Value="1"/>
         </Trigger>

         <!-- Highlights in-editing cell -->
         <Trigger Property="IsEditing" Value="True">
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
         </Trigger>
      </Style.Triggers>
   </Style>
</ResourceDictionary>